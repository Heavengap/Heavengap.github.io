{"meta":{"title":"林的家","subtitle":"","description":"社恐内向 胆小敏感","author":"林","url":"https://rmlin.cn","root":"/"},"pages":[{"title":"","date":"2025-02-22T14:24:51.295Z","updated":"2025-02-22T14:24:51.295Z","comments":true,"path":"about/index.html","permalink":"https://rmlin.cn/about/index.html","excerpt":"","text":"大二在校生，大一开始体统学习计算机语言。infj 人格+ 土象星座（听说好像是个多人格，至少我是这样的）还在继续学习c java 与liunx 。python目前没有想法。欢迎多多交流与探讨相关知识"},{"title":"archives","date":"2024-09-13T04:13:10.000Z","updated":"2024-09-13T04:13:10.540Z","comments":true,"path":"archives/index.html","permalink":"https://rmlin.cn/archives/index.html","excerpt":"","text":""},{"title":"更新日志","date":"2024-09-24T02:48:34.000Z","updated":"2025-02-23T13:33:44.279Z","comments":true,"path":"更新日志/index.html","permalink":"https://rmlin.cn/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/index.html","excerpt":"更新日志，记录网站更新内容","text":"更新日志，记录网站更新内容 9.24 ​ 更新了文章的封面 ​ 更新了暗黑模式 ​ 更新了友链页面 ​ 更换了作者头像 ​ 增加了主页背景图 ​ 对博客文章内容进行了增改 9.25 更新了电脑端的live2D人物 “hibiki” 加入了新的主人翁“友人A” 更新了新的文章《A 的日常》 9.27 更新了新文章”奇怪的比赛赛题递归与非递归解题算法的研究“ 10.6 更新了A的日常 修复了文本错误 10.8 修复了滚动条重叠导致的显示错误 添加了鼠标点击爱心动画 删除文章右边栏上方图片和显示错误问题 新增光标样式 10.9 右键菜单增改 标题特效 修复了一些BUG 10.10 添加网站雪花飘落效果 浏览器网页标题恶搞 背景添加动态线条效果 11.1 修复了一些bug 增添恶搞网页标题 增添背景雪花效果 更新了Java基础 11.19 背景改为全图背景 新增图片 删除了动态线性背景（太乱了。。。） 12.4 完结 java基础part1 增减背景板 25.2.5 新年快乐吖！ 更新了壁纸 更新了新篇—英语学习篇—旨在督促自己学习并记录 网站进行了SE搜索优化 2.23 删除了英语学习篇改为python爬虫篇 喝了杯咖啡并撸了会猫 删减了背景图片"},{"title":"我的朋友","date":"2024-09-23T10:32:38.493Z","updated":"2024-09-23T10:32:38.493Z","comments":true,"path":"friends/index.html","permalink":"https://rmlin.cn/friends/index.html","excerpt":"","text":"一起互换友链吧😃，快快联系我"},{"title":"所有分类","date":"2024-09-13T15:19:38.757Z","updated":"2024-09-13T15:19:38.757Z","comments":true,"path":"categories/index.html","permalink":"https://rmlin.cn/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2024-09-13T15:20:05.551Z","updated":"2024-09-13T15:20:05.551Z","comments":true,"path":"tags/index.html","permalink":"https://rmlin.cn/tags/index.html","excerpt":"","text":""},{"title":"网络安全","date":"2025-03-04T07:08:24.000Z","updated":"2025-03-04T07:08:54.538Z","comments":true,"path":"作业/网络安全/index.html","permalink":"https://rmlin.cn/%E4%BD%9C%E4%B8%9A/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/index.html","excerpt":"","text":"1.ping 我们以百度网址为例 ping是用来检查网络是否通畅或者网络连接速度的命令ping命令通常用来作为网络可用性的检查。ping命令可以对一个网络地址发送测试数据包，看该网络地址是否有响应并统计响应时间，以此测试网络。而nslookup可以让我们访问到了该ping下百度的ip地址 此时我们只要在网上使用ip地址检测工具就可以得到百度该服务器的地址 2.netstatnetstat这个命令是运维工作中经常会用到的一个命令。它的主要作用是打印网络连接、路由表、连接的数据统计、伪装连接以及广播域成员 然后添加常用参数 如‘’netstat-ano‘’ Listening、Established、Close_wait、Time_wait分别代表处于侦听状态，该端口开放等待连接但未链接、建立联系、对方主动关闭连接或网络异常导致连接中断、我方主动调用close（）断开连接，收到对方确认后状态变为Time_wait 3.nbtstat 查看在TCP&#x2F;IP协议之上运行NetBIOS服务的统计数据，并可以查看本地远程计算机上的NetBIOS名称列表"},{"title":"","date":"2025-03-17T14:38:52.474Z","updated":"2025-03-17T14:38:49.451Z","comments":true,"path":"作业/虚拟化/index.html","permalink":"https://rmlin.cn/%E4%BD%9C%E4%B8%9A/%E8%99%9A%E6%8B%9F%E5%8C%96/index.html","excerpt":"","text":"complete responsive flower website design tutorial flower. home about products review contact fresh flowers natural & beautiful flowers Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae laborum ut minus corrupti dolorum dolore assumenda iste voluptate dolorem pariatur. shop now about us best flower sellers why choose us? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Rem cumque sit nemo pariatur corporis perspiciatis aspernatur a ullam repudiandae autem asperiores quibusdam omnis commodi alias repellat illum, unde optio temporibus. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Accusantium ea est commodi incidunt magni quia molestias perspiciatis, unde repudiandae quidem. learn more free delivery on all orders 10 days returns moneyback guarantee offer & gifts on all orders secure paymens protected by paypal latest products -10% add to cart flower pot $12.99 $15.99 -15% add to cart flower pot $12.99 $15.99 -5% add to cart flower pot $12.99 $15.99 -20% add to cart flower pot $12.99 $15.99 -17% add to cart flower pot $12.99 $15.99 -3% add to cart flower pot $12.99 $15.99 -18% add to cart flower pot $12.99 $15.99 -10% add to cart flower pot $12.99 $15.99 -5% add to cart flower pot $12.99 $15.99 customer's review Lorem ipsum dolor sit amet consectetur adipisicing elit. Corrupti asperiores laboriosam praesentium enim maiores? Ad repellat voluptates alias facere repudiandae dolor accusamus enim ut odit, aliquam nesciunt eaque nulla dignissimos. john deo happy customer Lorem ipsum dolor sit amet consectetur adipisicing elit. Corrupti asperiores laboriosam praesentium enim maiores? Ad repellat voluptates alias facere repudiandae dolor accusamus enim ut odit, aliquam nesciunt eaque nulla dignissimos. john deo happy customer Lorem ipsum dolor sit amet consectetur adipisicing elit. Corrupti asperiores laboriosam praesentium enim maiores? Ad repellat voluptates alias facere repudiandae dolor accusamus enim ut odit, aliquam nesciunt eaque nulla dignissimos. john deo happy customer contact us quick links home about products review contact extra links my account my order my favorite locations india USA japan france contact info +123-456-7890 example@gmail.com mumbai, india - 400104 created by mr. web designer | all rights reserved"},{"title":"","date":"2025-03-17T13:49:15.923Z","updated":"2025-03-17T12:46:41.304Z","comments":true,"path":"作业/虚拟化/css/style.css","permalink":"https://rmlin.cn/%E4%BD%9C%E4%B8%9A/%E8%99%9A%E6%8B%9F%E5%8C%96/css/style.css","excerpt":"","text":":root{ --pink:#e84393; } *{ margin:0; padding:0; box-sizing: border-box; font-family: Verdana, Geneva, Tahoma, sans-serif; outline: none; border:none; text-decoration: none; text-transform: capitalize; transition: .2s linear; } html{ font-size: 62.5%; scroll-behavior: smooth; scroll-padding-top: 6rem; overflow-x: hidden; } section{ padding:2rem 9%; } .heading{ text-align: center; font-size: 4rem; color:#333; padding:1rem; margin:2rem 0; background:rgba(255, 51, 153,.05); } .heading span{ color:var(--pink); } .btn{ display: inline-block; margin-top: 1rem; border-radius: 5rem; background:#333; color:#fff; padding:.9rem 3.5rem; cursor: pointer; font-size: 1.7rem; } .btn:hover{ background:var(--pink); } header{ position: fixed; top:0; left:0; right:0; background:#fff; padding:2rem 9%; display: flex; align-items: center; justify-content: space-between; z-index: 1000; box-shadow: 0 .5rem 1rem rgba(0,0,0,.1); } header .logo{ font-size: 3rem; color:#333; font-weight: bolder; } header .logo span{ color:var(--pink); } header .navbar a{ font-size: 2rem; padding:0 1.5rem; color:#666; } header .navbar a:hover{ color:var(--pink); } header .icons a{ font-size: 2.5rem; color:#333; margin-left: 1.5rem; } header .icons a:hover{ color:var(--pink); } header #toggler{ display: none; } header .fa-bars{ font-size: 3rem; color:#333; border-radius: .5rem; padding:.5rem 1.5rem; cursor: pointer; border:.1rem solid rgba(0,0,0,.3); display: none; } .home{ display: flex; align-items: center; min-height: 100vh; background:url(../images/home-bg.jpg) no-repeat; background-size: cover; background-position: center; } .home .content{ max-width: 50rem; } .home .content h3{ font-size: 6rem; color:#333; } .home .content span{ font-size: 3.5rem; color:var(--pink); padding:1rem 0; line-height: 1.5; } .home .content p{ font-size: 1.5rem; color:#999; padding:1rem 0; line-height: 1.5; } .about .row{ display: flex; align-items: center; gap:2rem; flex-wrap: wrap; padding:2rem 0; padding-bottom: 3rem; } .about .row .video-container{ flex:1 1 40rem; position: relative; } .about .row .video-container video{ width:100%; border:1.5rem solid #fff; border-radius: .5rem; box-shadow: 0 .5rem 1rem rgba(0,0,0,.1); height: 100%; object-fit: cover; } .about .row .video-container h3{ position: absolute; top:50%; transform: translateY(-50%); font-size: 3rem; background:#fff; width:100%; padding:1rem 2rem; text-align: center; mix-blend-mode: screen; } .about .row .content{ flex:1 1 40rem; } .about .row .content h3{ font-size: 3rem; color:#333; } .about .row .content p{ font-size: 1.5rem; color:#999; padding:.5rem 0; padding-top: 1rem; line-height: 1.5; } .icons-container{ background:#eee; display: flex; flex-wrap: wrap; gap:1.5rem; padding-top: 5rem; padding-bottom: 5rem; } .icons-container .icons{ background:#fff; border:.1rem solid rgba(0,0,0,.1); padding:2rem; display: flex; align-items: center; flex:1 1 25rem; } .icons-container .icons img{ height:5rem; margin-right: 2rem; } .icons-container .icons h3{ color:#333; padding-bottom: .5rem; font-size: 1.5rem; } .icons-container .icons span{ color:#555; font-size: 1.3rem; } .products .box-container{ display: flex; flex-wrap: wrap; gap:1.5rem; } .products .box-container .box{ flex:1 1 30rem; box-shadow: 0 .5rem 1.5rem rgba(0,0,0,.1); border-radius: .5rem; border:.1rem solid rgba(0,0,0,.1); position: relative; } .products .box-container .box .discount{ position: absolute; top:1rem; left:1rem; padding:.7rem 1rem; font-size: 2rem; color:var(--pink); background:rgba(255, 51, 153,.05); z-index: 1; border-radius: .5rem; } .products .box-container .box .image{ position: relative; text-align: center; padding-top: 2rem; overflow:hidden; } .products .box-container .box .image img{ height:25rem; } .products .box-container .box:hover .image img{ transform: scale(1.1); } .products .box-container .box .image .icons{ position: absolute; bottom:-7rem; left:0; right:0; display: flex; } .products .box-container .box:hover .image .icons{ bottom:0; } .products .box-container .box .image .icons a{ height: 5rem; line-height: 5rem; font-size: 2rem; width:50%; background:var(--pink); color:#fff; } .products .box-container .box .image .icons .cart-btn{ border-left: .1rem solid #fff7; border-right: .1rem solid #fff7; width:100%; } .products .box-container .box .image .icons a:hover{ background:#333; } .products .box-container .box .content{ padding:2rem; text-align: center; } .products .box-container .box .content h3{ font-size: 2.5rem; color:#333; } .products .box-container .box .content .price{ font-size: 2.5rem; color:var(--pink); font-weight: bolder; padding-top: 1rem; } .products .box-container .box .content .price span{ font-size: 1.5rem; color:#999; font-weight: lighter; text-decoration: line-through; } .review .box-container{ display: flex; flex-wrap: wrap; gap:1.5rem; } .review .box-container .box{ flex:1 1 30rem; box-shadow: 0 .5rem 1.5rem rgba(0,0,0,.1); border-radius: .5rem; padding:3rem 2rem; position: relative; border:.1rem solid rgba(0,0,0,.1); } .review .box-container .box .fa-quote-right{ position: absolute; bottom:3rem; right:3rem; font-size: 6rem; color:#eee; } .review .box-container .box .stars i{ color:var(--pink); font-size: 2rem; } .review .box-container .box p{ color:#999; font-size: 1.5rem; line-height: 1.5; padding-top: 2rem; } .review .box-container .box .user{ display: flex; align-items: center; padding-top: 2rem; } .review .box-container .box .user img{ height:6rem; width:6rem; border-radius: 50%; object-fit: cover; margin-right: 1rem; } .review .box-container .box .user h3{ font-size: 2rem; color:#333; } .review .box-container .box .user span{ font-size: 1.5rem; color:#999; } .contact .row{ display: flex; flex-wrap: wrap-reverse; gap:1.5rem; align-items: center; } .contact .row form{ flex:1 1 40rem; padding:2rem 2.5rem; box-shadow: 0 .5rem 1.5rem rgba(0,0,0,.1); border:.1rem solid rgba(0,0,0,.1); background: #fff; border-radius: .5rem; } .contact .row .image{ flex:1 1 40rem; } .contact .row .image img{ width: 100%; } .contact .row form .box{ padding:1rem; font-size: 1.7rem; color:#333; text-transform: none; border:.1rem solid rgba(0,0,0,.1); border-radius: .5rem; margin:.7rem 0; width: 100%; } .contact .row form .box:focus{ border-color: var(--pink); } .contact .row form textarea{ height: 15rem; resize: none; } .footer .box-container{ display: flex; flex-wrap: wrap; gap:1.5rem; } .footer .box-container .box{ flex:1 1 25rem; } .footer .box-container .box h3{ color:#333; font-size: 2.5rem; padding:1rem 0; } .footer .box-container .box a{ display: block; color:#666; font-size: 1.5rem; padding:1rem 0; } .footer .box-container .box a:hover{ color:var(--pink); text-decoration: underline; } .footer .box-container .box img{ margin-top: 1rem; } .footer .credit{ text-align: center; padding:1.5rem; margin-top: 1.5rem; padding-top: 2.5rem; font-size: 2rem; color:#333; border-top: .1rem solid rgba(0,0,0,.1); padding-bottom: 9rem; } .footer .credit span{ color:var(--pink); } /* media queries */ @media (max-width:991px){ html{ font-size: 55%; } header{ padding:2rem; } section{ padding:2rem; } .home{ background-position: left; } } @media (max-width:768px){ header .fa-bars{ display: block; } header .navbar{ position:absolute; top:100%; left:0; right:0; background:#eee; border-top: .1rem solid rgba(0,0,0,.1); clip-path: polygon(0 0, 100% 0, 100% 0, 0 0); } header #toggler:checked ~ .navbar{ clip-path:polygon(0 0, 100% 0, 100% 100%, 0% 100%); } header .navbar a{ margin:1.5rem; padding:1.5rem; background:#fff; border:.1rem solid rgba(0,0,0,.1); display: block; } .home .content h3{ font-size: 5rem; } .home .content span{ font-size: 2.5rem; } .icons-container .icons h3{ font-size: 2rem; } .icons-container .icons span{ font-size: 1.7rem; } } @media (max-width:450px){ html{ font-size: 50%; } .heading{ font-size: 3rem; } }"},{"title":"","date":"2025-03-17T13:53:19.066Z","updated":"2025-03-17T12:46:41.732Z","comments":true,"path":"作业/虚拟化/js/script.js","permalink":"https://rmlin.cn/%E4%BD%9C%E4%B8%9A/%E8%99%9A%E6%8B%9F%E5%8C%96/js/script.js","excerpt":"","text":"let navbar = document.querySelector('.navbar') document.querySelector('#menu-bar').onclick = () =>{ navbar.classList.toggle('active'); } document.querySelector('#close').onclick = () =>{ navbar.classList.remove('active'); } window.onscroll = () =>{ navbar.classList.remove('active'); if(window.scrollY > 100){ document.querySelector('header').classList.add('active'); }else{ document.querySelector('header').classList.remove('active'); } } let themeToggler = document.querySelector('#theme-toggler'); themeToggler.onclick = () =>{ themeToggler.classList.toggle('fa-sun'); if(themeToggler.classList.contains('fa-sun')){ document.querySelector('body').classList.add('active'); }else{ document.querySelector('body').classList.remove('active'); } } document.querySelectorAll('.small-image-1').forEach(images =>{ images.onclick = () =>{ document.querySelector('.big-image-1').src = images.getAttribute('src'); } }); document.querySelectorAll('.small-image-2').forEach(images =>{ images.onclick = () =>{ document.querySelector('.big-image-2').src = images.getAttribute('src'); } }); document.querySelectorAll('.small-image-3').forEach(images =>{ images.onclick = () =>{ document.querySelector('.big-image-3').src = images.getAttribute('src'); } }); let countDate = new Date('aug 1, 2021 00:00:00').getTime(); function countDown(){ let now = new Date().getTime(); gap = countDate - now; let seconds = 1000; let minutes = seconds * 60; let hours = minutes * 60; let days = hours * 24; let d = Math.floor(gap / (days)); let h = Math.floor((gap % (days)) / (hours)); let m = Math.floor((gap % (hours)) / (minutes)); let s = Math.floor((gap % (minutes)) / (seconds)); document.getElementById('days').innerText = d; document.getElementById('hours').innerText = h; document.getElementById('minutes').innerText = m; document.getElementById('seconds').innerText = s; } setInterval(function(){ countDown() },1000); var swiper = new Swiper(\".product-slider\", { slidesPerView: 3, loop:true, spaceBetween: 10, autoplay: { delay: 4000, disableOnInteraction: false, }, navigation: { nextEl: \".swiper-button-next\", prevEl: \".swiper-button-prev\", }, breakpoints: { 0: { slidesPerView: 1, }, 550: { slidesPerView: 2, }, 800: { slidesPerView: 3, }, 1000: { slidesPerView: 3, }, }, }); var swiper = new Swiper(\".review-slider\", { slidesPerView: 3, loop:true, spaceBetween: 10, autoplay: { delay: 4000, disableOnInteraction: false, }, breakpoints: { 0: { slidesPerView: 1, }, 550: { slidesPerView: 2, }, 800: { slidesPerView: 3, }, 1000: { slidesPerView: 3, }, }, });"}],"posts":[{"title":"python爬虫基础（1）","slug":"python爬虫基础（1）","date":"2025-02-08T10:20:37.000Z","updated":"2025-03-01T13:46:42.574Z","comments":true,"path":"2025/02/08/python爬虫基础（1）/","permalink":"https://rmlin.cn/2025/02/08/python%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/","excerpt":"","text":"python爬虫提到python你首先想到的是什么呢？便捷的计算机语言、精简的算法、脱俗的语法格式…….但我首先想到的是爬虫，这也是我学习python的兴趣来源。我们平时都说Python爬虫，其实这里可能有个误解，爬虫并不是Python独有的，可以做爬虫的语言有很多例如 : PHP,JAVA,C#,C++,Python，选择Python做爬虫是因为Python相对来说比较简单，而且功能比较齐全。 第一次接触python是在高中课上，我们学习这一门语言作为计算机学习的开始，当时只觉得好麻烦好繁琐，为什么有些语句后面加”：“,为什么有些不加等等。到了现在先系统的学完c后再回头看python便有了很好打理解。 爬虫介绍故名思意，一种爬行的虫子，只不过它不在地面载体爬而是在网络上。这条虫可以做的的事很多，例如某软件的视频vip视频无法观看，抖音上有水印的照片视频，都可以通过爬虫方式将源数据“拿下来” ，原则上,只要是浏览器(客户端)能做的事情，爬虫都能够做。当然切记不要违法乱纪！！！涉密敏感信息不要爬取 小心进局子。 爬虫准备工作首先我们需要下载python，我下载的是官方最新的版本 3.8.3其次我们需要一个运行Python的环境，我用的是pycharm 小试牛刀（文章所用代码等皆在GitHub中Heavengap&#x2F;pythonProject: myselfPractice） 如果你的python版本为3以下 还需安装urllib 在终端（alt+F12）中输入**pip install urllib** 出现.venv 则说明在建立python项目时建立的虚拟环境 此时的任何库的引入在其他项目中不生效只作用于本项目中，其他项目如需使用需重新引入。 以百度网页为例（www.baidu.com) 此处http协议而不是https!https涉及三次握手更麻烦 123456from urllib.request import urlopenurl = &quot;http://www.baidu.com&quot;resp = urlopen(url)with open(&quot;mybaidu.html&quot;, mode=&quot;w&quot;, encoding =&quot;utf-8&quot;) as f: f.write(resp.read().decode(&quot;utf-8&quot;))print(&quot;over!&quot;) 用的python3自带的urllib库 用浏览器打开生产的mybaidu.html可看到爬到的网页网站 此类网址为整合网址，指网页数据与构建网页的框架为一体，即获取到代码中就包含网页信息 form urllib库中request一个urlopen url为目标网页，resp为respond 得到的urlopen中的url with open创建一个mybaide名称的html文件（html文件可以打开js编写的代码使观感更直接），mode格式为w即为write 最后如果是edge浏览器需再最后添加 encoding 编码格式为 utf-8 ，否则可能会出现乱码 声明：有些网页的编码格式不为utf-8 可通过开发者选项工具中 打开网页源代码中找到网页所用的格式（该代码所爬的代码就是网页源代码） 将with open 的整体操作as f ，f的write中读取resp并且编码模式为utf-8，不表明则为乱码，可自行实验 最后在结束段输出over!表明程序完整运行并结束。 简易网页自搜索首先要引入库这个概念。默认的python编译器中缺少很多模块，例如c++ 中的库添加。此处用到的库为’requests’ 首次使用 打开文件终端（alt+F12） 输入 pip install requests即可 12345678import requestsquery = input(&quot;请输入你想要搜索的内容：&quot;)url = f&#x27;https://cn.bing.com/search?q=&#123;query&#125;&#x27;headers=&#123;&quot;user-agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0&quot;&#125;resp=requests.get(url,headers=headers)print(resp.text) 根据 “小试牛刀”环节 你可以大题理解代码内容，其中 query 相当于变量X 在url中 起变量作用，你可以在浏览器中搜索任何内容，你会发现，他们大致的网页地址均为https://www.bing.com/search?q=陈奕迅 ； https://www.baidu.com/s?wd=陈奕迅。你可能会说，后面还有一串杂乱的代码， 删除后面冗杂的部分后你会发现搜索内容并不会改变 .W&lt; headers为请求头部分，他的存在是必不可少的，你会发现在确实headers的现况下，一些网址会阻止你的访问，这就涉及到反爬方面的知识，而headers中的内容就像我们的居民身份证一样，没有它寸步难行。所以我们需要伪装一个，如果你仔细看headers的内容不难发现其中包括很多我们的个人信息，比如chrome的是133.0.0.0 edg浏览器为133.0.0.0 safari为537.36 window系统等等。那么如何简单获取我们的请求头呢？ 可以借助浏览器自带的工具“开发者工具”（Ctrl+Shift+i） 在”网络“主分类中选择”全部“项，此时刷新页面，打开名称中第一个文件。 你会找到 User-Agent 它的内容就是我们要找的内容。别忘了在前面添加**”user-agent”:** 代码运行过程中 如果出现urllib3.exceptions.ProxyError: (‘Unable to connect to proxy’, OSError(0, ‘Error’)) 请检查你的网络代理是不是没关 未完待续。。。。","categories":[{"name":"计算机语言","slug":"计算机语言","permalink":"https://rmlin.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"python爬虫","slug":"python爬虫","permalink":"https://rmlin.cn/tags/python%E7%88%AC%E8%99%AB/"}]},{"title":"java基础","slug":"java的框架解析","date":"2024-12-12T02:27:24.000Z","updated":"2025-02-08T11:03:05.928Z","comments":true,"path":"2024/12/12/java的框架解析/","permalink":"https://rmlin.cn/2024/12/12/java%E7%9A%84%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/","excerpt":"","text":"java基础-part1这一部分我想着重说一下基本的 java 格式搭建与基本运用 如 Scanner的使用与封装与继承的基本概念。学会了这几部分那么java的基本语句就可以自行学习了。 1.框架搭建1234567public class HelloWorld&#123; public static void main(String[] args) &#123; System.out.println(&quot;Hello World&quot;); &#125;&#125; 这是一个简单的java程序，也是所有语言学习第一个代码”hello world“。接下来我将通过这个例子分析java程序的基本框架 第一行代码： public class HelloWord&#123;&#125; 在程序中定义了一个名为HelloWorld的公共类（public class），该类是程序的入口点。Java程序中的每个类都必须以一个公共类来定义。文件名必须与公共类的名称相同，并以.java作为文件扩展名。换而言之，HelloWorld 指代文件名，它可以是任意的名字（须符合命名规则）且必须与程序文件名相同 第二行代码： public static viod main(String[] stgs) 其中public static(公共静态方法)它是Java程序的起点。 在程序执行时，从主函数main方法开始执行（与c语言中相同）。 viod则指代返回一个空值，即不需要返回值。 String[] args 首先它存在好几种形式String... args,String args[]等，但我们为了避免歧义，主要使用第一种形式来写，但我们遇到到其他形式时也应该认识。 从形状来看，他是一个数组，可以理解为一个数组。那么为什么要存在一个数组呢？ 在命令行中比如运行 Test.class 文件,你可以这样写： java Test abc相当于给数组传入了一个abc 字符串。也可以打印出来，可以作为简单的输入。 例如： 12345public class Test &#123; public static void main(String[] args) &#123; System.out.println(args[0]); &#125;&#125; 用控制台编译运行： $ javac Test.java$ java Test runoobabc 我们会发现这个数组会记录我们的输入并储存。在Java中，main 方法的参数必须是一个 String 类型的数组 String[] args。这是由Java语言规范所定义的，这样设计的目的是为了接收命令行参数。因此，main 方法的参数只能是 String[] args，而不能直接传入其他类型。 2.Scanner的使用在程序的编写中，我们经常遇到输入的情况。 例如example1 12345678910import java.util.Scanner;public class example1&#123; public static void main(String args[]) &#123; Scanner sc = new Scanner(System.in); System.out.println(&quot;请输入A的数值：&quot;); int A = sc.nextInt(); System.out.println(&quot;A的数值为：&quot;+A); &#125;&#125; 我们可以看出需要在开头引入import java.util.Scanner,它的作用是构建Scanner对象。 import加载已定义好的类或包，导入支持类（可以说JDK基础类或者自己编写的的类），可供本类调用方法和属性。import导入声明可分为两种导入声明： 1&gt;单类型导入单类型导入单类型导入单类型导入(single-type-import) 2&gt;按需类型导入按需类型导入按需类型导入按需类型导入(type-import-on-demand) “importjava.util.*;”表示的是把util这个包下的全部类导入到程序中；而“importjava.util.Scanner;”表示的是只把util包下的Scanner类导入到程序中； Scanner sc &#x3D; new Scanner(System.in) Scanner类的创建对象： Scanner A&#x3D;new Scanner(System.in); int A &#x3D; sc.nextInt(); 中 nextXxx中 的Xxx 可为int Double 等，如果需要判断是否包含下一个字符串，则可省略Xxx。hasNextXxx() 判断是否还有下一个输入项,Xxx与next相同。 Scanner类中常用的方法next()和nextLine()的区别： next()：作为字符串输入的方法，自动屏蔽掉输入的分隔符，如空格、Tab键、回车键，直到遇到有效地字符输入后，则将这些分隔符作为结束标志； nextLine()；则是将从开始运行所输入的所有的字符，包括分隔符，均作为控制台输入，只有在遇到enter回车键时，才结束输入，并将所有的内容作为输入内容传给Scanner；也就是说，next()方法并不能返回带空格、Tab键、回车符的字符串，而nextLine可以； 注意java 的程序编译中，区分大小写，如上图中Scanner的S必须是大写，Syestem的S，String的S…….. 值得注意的是，此时可能会出现黄色报错Resource leak: ‘sc’ is never closed。该报错不影响程序的运行但会占用大量内存空间导致系统资源浪费，所以编译器给出了黄色报错。如需关闭只需在在设置输入内容的代码下一行输入 sc.close; 3.封装与继承3.1.1封装在面向对象程式设计方法中，封装（英语：Encapsulation）是指一种将抽象性函式接口的实现细节部分包装、隐藏起来的方法。 封装可以被认为是一个保护屏障，防止该类的代码和数据被外部类定义的代码随机访问。 要访问该类的代码和数据，必须通过严格的接口控制。 封装最主要的功能在于我们能修改自己的实现代码，而不用修改那些调用我们代码的程序片段。 适当的封装可以让程式码更容易理解与维护，也加强了程式码的安全性。 3.1.2封装的优点 良好的封装能够减少耦合。 类内部的结构可以自由修改。 可以对成员变量进行更精确的控制。 隐藏信息，实现细节。 3.1.3实现Java封装的步骤 修改属性的可见性来限制对属性的访问（一般限制为private），例如： 1234public class Person &#123; private String name; private int age;&#125; 这段代码中，将 name 和 age 属性设置为私有的，只能本类才能访问，其他类都访问不了，如此就对信息进行了隐藏。 对每个值属性提供对外的公共方法访问，也就是创建一对赋取值方法，用于对私有属性的访问，例如： 12345678910111213141516public class Person&#123; private String name; private int age; public int getAge()&#123; return age; &#125; public String getName()&#123; return name; &#125; public void setAge(int age)&#123; this.age = age; &#125; public void setName(String name)&#123; this.name = name; &#125;&#125; 采用 this 关键字是为了解决实例变量（private String name）和局部变量（setName(String name)中的name变量）之间发生的同名的冲突。 3.2应用举例example1 12345678910111213141516171819202122232425262728293031323334import java.util.*;class Member &#123; public String name;//公共属性name public int salary;//公共属性salary private String sex;//私有属性sex private String hobby;//私有属性hobby public void setSex(String sex) &#123;//定义一个公共的方法来设置sex属性 this.sex=sex; &#125; public String getSex() &#123;//定义一个公共的方法来获取sex属性 return this.sex; &#125; public void setHobby(String hobby) &#123;//定义一个公共的方法来设置hobby属性 this.hobby=hobby; &#125; public String getHobby() &#123;//定义一个公共的方法来获取hobby属性 return this.hobby; &#125; public void talk() &#123;//定义一个公共的方法talk System.out.println(name+&quot;聊得非常开心！&quot;); &#125;&#125;public class Demo &#123; public static void main(String[] args) &#123; Member m=new Member(); m.name=&quot;小红&quot;;//对公共属性name直接赋值 m.salary=5000;//对公共属性salary也可以直接赋值 m.setSex(&quot;女&quot;);//对私有属性操作，要通过get来访问、set来更改的方法 m.setHobby(&quot;逛街&quot;);//同上 System.out.println(&quot;姓名:&quot;+m.name+&quot;,性别:&quot;+m.getSex() +&quot;,薪水:&quot;+m.salary+&quot;,爱好:&quot;+m.getHobby()+&quot;!&quot;); m.talk();//可以调用Member类中的公共方法talk &#125;&#125; 运行结果如下： 上面这段代码，我们举例一个相对简单的例子，通过注释可以看到，这就实现了封装，对于公共属性name和salary，我们可以直接对其赋值；但是对于私有属性sex和hobby，我们需要通过使用set方法来为其赋值，再通过get方法来获取其值。 俗话说，概念理解的再多再准确，也不如写一段代码熟悉的更快！下面我们再举一个和上面类似的例子吧！！！ example2 1234567891011121314151617181920212223242526272829303132333435import java.util.*;class Young &#123; private String name; private int age; private String major; public void setName(String name) &#123; this.name=name; &#125; public void setAge(int age) &#123; this.age=age; &#125; public void setMajor(String major) &#123; this.major=major; &#125; public String getName() &#123; return this.name; &#125; public int getAge() &#123; return this.age; &#125; public String getMajor() &#123; return this.major; &#125;&#125;public class Forever &#123; public static void main(String[] args) &#123; Young member=new Young(); member.setName(&quot;张三&quot;); member.setAge(20); member.setMajor(&quot;计算机科学与技术&quot;); System.out.println(&quot;学生姓名:&quot;+member.getName()+ &quot;,年龄:&quot;+member.getAge()+ &quot;,专业:&quot;+member.getMajor()+&quot;!&quot;); &#125;&#125; 3.3 继承3.3.1继承的概念 继承是java面向对象编程技术的一块基石，因为它允许创建分等级层次的类。 继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。 兔子和羊属于食草动物类，狮子和豹属于食肉动物类。 食草动物和食肉动物又是属于动物类。 所以继承需要符合的关系是：is-a，父类更通用，子类更具体。 虽然食草动物和食肉动物都是属于动物，但是两者的属性和行为上有差别，所以子类会具有父类的一般特性也会具有自身的特性。 3.3.2类的继承格式 在 Java 中通过 extends 关键字可以申明一个类是从另外一个类继承而来的，一般形式如下： 12345class 父类 &#123;&#125; class 子类 extends 父类 &#123;&#125; 3.3.3什么需要继承 接下来我们通过实例来说明这个需求。 开发动物类，其中动物分别为企鹅以及老鼠，要求如下： 企鹅：属性（姓名，id），方法（吃，睡，自我介绍） 老鼠：属性（姓名，id），方法（吃，睡，自我介绍） 企鹅类 1234567891011121314151617public class Penguin &#123; private String name; private int id; public Penguin(String myName, int myid) &#123; name = myName; id = myid; &#125; public void eat()&#123; System.out.println(name+&quot;正在吃&quot;); &#125; public void sleep()&#123; System.out.println(name+&quot;正在睡&quot;); &#125; public void introduction() &#123; System.out.println(&quot;大家好！我是&quot; + id + &quot;号&quot; + name + &quot;.&quot;); &#125; &#125; 老鼠类 1234567891011121314151617public class Mouse &#123; private String name; private int id; public Mouse(String myName, int myid) &#123; name = myName; id = myid; &#125; public void eat()&#123; System.out.println(name+&quot;正在吃&quot;); &#125; public void sleep()&#123; System.out.println(name+&quot;正在睡&quot;); &#125; public void introduction() &#123; System.out.println(&quot;大家好！我是&quot; + id + &quot;号&quot; + name + &quot;.&quot;); &#125; &#125; 从这两段代码可以看出，代码存在重复，导致代码量大且臃肿，而且维护性不高(主要表现是后期需要修改的时候，需要修改很多的代码，容易出错)。要从根本上解决这两段代码的问题，就需要继承，将两段代码中相同的部分提取出来组成 一个父类： 公共父类 1234567891011121314151617public class Animal &#123; private String name; private int id; public Animal(String myName, int myid) &#123; name = myName; id = myid; &#125; public void eat()&#123; System.out.println(name+&quot;正在吃&quot;); &#125; public void sleep()&#123; System.out.println(name+&quot;正在睡&quot;); &#125; public void introduction() &#123; System.out.println(&quot;大家好！我是&quot; + id + &quot;号&quot; + name + &quot;.&quot;); &#125; &#125; 这个Animal类就可以作为一个父类，然后企鹅类和老鼠类继承这个类之后，就具有父类当中的属性和方法，子类就不会存在重复的代码，维护性也提高，代码也更加简洁，提高代码的复用性（复用性主要是可以多次使用，不用再多次写同样的代码） 继承之后的代码 企鹅类 12345public class Penguin extends Animal &#123; public Penguin(String myName, int myid) &#123; super(myName, myid); &#125; &#125; 老鼠类 12345public class Mouse extends Animal &#123; public Mouse(String myName, int myid) &#123; super(myName, myid); &#125; &#125; 3.3.5继承类型 需要注意的是 Java 不支持多继承，但支持多重继承。 ![](java-extends-2020-12-08.png (661×671)) 3.3.6继承的特性 子类拥有父类非 private 的属性、方法。 子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。 子类可以用自己的方式实现父类的方法。 Java 的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如 B 类继承 A 类，C 类继承 B 类，所以按照关系就是 B 类是 C 类的父类，A 类是 B 类的父类，这是 Java 继承区别于 C++ 继承的一个特性。 提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系越紧密，代码独立性越差）。 3.4继承关键字继承可以使用 extends 和 implements 这两个关键字来实现继承，而且所有的类都是继承于 java.lang.Object，当一个类没有继承的两个关键字，则默认继承 Object（这个类在 java.lang 包中，所以不需要 import）祖先类。 extends关键字 123456789101112public class Animal &#123; private String name; private int id; public Animal(String myName, int myid) &#123; //初始化属性值 &#125; public void eat() &#123; //吃东西方法的具体实现 &#125; public void sleep() &#123; //睡觉方法的具体实现 &#125; &#125; public class Penguin extends Animal&#123; &#125; implements关键字 使用 implements 关键字可以变相的使java具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口（接口跟接口之间采用逗号分隔）。 1234567891011public interface A &#123; public void eat(); public void sleep();&#125; public interface B &#123; public void show();&#125; public class C implements A,B &#123;&#125; super 与 this 关键字 super 关键字：我们可以通过 super 关键字来实现对父类成员的访问，用来引用当前对象的父类。 this 关键字：指向自己的引用，引用当前对象，即它所在的方法或构造函数所属的对象实例。。 123456789101112131415161718192021222324class Animal &#123; void eat() &#123; System.out.println(&quot;animal : eat&quot;); &#125;&#125; class Dog extends Animal &#123; void eat() &#123; System.out.println(&quot;dog : eat&quot;); &#125; void eatTest() &#123; this.eat(); // this 调用自己的方法 super.eat(); // super 调用父类方法 &#125;&#125; public class Test &#123; public static void main(String[] args) &#123; Animal a = new Animal(); a.eat(); Dog d = new Dog(); d.eatTest(); &#125;&#125; 输出结果为： 123animal : eatdog : eatanimal : eat 在 Java 中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类，所以 extends 只能继承一个类。 final 关键字 final 可以用来修饰变量（包括类属性、对象属性、局部变量和形参）、方法（包括类方法和对象方法）和类。 final 含义为 “最终的”。 使用 final 关键字声明类，就是把类定义定义为最终类，不能被继承，或者用于修饰方法，该方法不能被子类重写： 声明类： 1final class 类名 &#123;//类体&#125; 声明方法： 1修饰符(public/private/default/protected) final 返回值类型 方法名()&#123;//方法体&#125; 注： final 定义的类，其中的属性、方法不是 final 的。 3.5封装与继承实战！编写描述动物的继承关系程序。动物包括山羊和狼，山羊和狼都具有名称和重量，但它们的行为不同，山羊吃草，狼吃肉，它们的叫声也不同，但走路行为一致。通过继承实现以上需求，并编写测试程序验证。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&gt;package ShiZhan;&gt;abstract class Animal&#123; private String name; private double weight; public Animal (String name, double weight)&#123; this.name = name; this.weight= weight; &#125; public String getName()&#123; return name; &#125; public double getWeight()&#123; return weight; &#125; public abstract void eat(); public abstract void makeSound(); public void walk()&#123; System.out.println(name+&quot;在奔跑&quot;); &#125; &#125;class Goat extends Animal&#123; public Goat (String name,double weight)&#123; super(name, weight); &#125; public void eat()&#123; System.out.println(getName()+&quot;在吃草&quot;); &#125; public void makeSound()&#123; System.out.println(getName()+&quot;说：咩~~~~~&quot;); &#125; public void weight1()&#123; System.out.println(&quot;体重是：&quot;+getWeight()); &#125;&#125; class Wolf extends Animal&#123; public Wolf (String name, double weight)&#123; super(name, weight); &#125; public void eat()&#123; System.out.println(getName()+&quot;在吃肉&quot;); &#125; public void makeSound()&#123; System.out.println(getName()+&quot;说：喔~~~~~~~&quot;); &#125; public void weight1()&#123; System.out.println(&quot;体重是：&quot;+getWeight()); &#125;&#125;&gt;public class AinmalTest &#123; public static void main(String[] arg)&#123; Goat goat = new Goat(&quot;灰太狼&quot;,45.0); Wolf wolf = new Wolf(&quot;喜羊羊&quot;,30.0); System.out.println(&quot;关于羊：&quot;); goat.eat(); goat.makeSound(); goat.walk(); goat.weight1(); System.out.println(); System.out.println(&quot;关于狼&quot;); wolf.eat(); wolf.makeSound(); wolf.walk(); wolf.weight1(); &#125;&gt;&#125; 运行结果 后记学习就是不断的学习与借鉴的，没有一蹴而就的天才。希望大家可以自动手研究，也许会在一个很小很小的问题上浪费很长时间，但茶余饭后细细品这这段时间的疲惫与不堪，一种别样的快感涌上心头，是一种看视频打游戏所无法带来的巨大满足感。 参考： https://www.runoob.com/java/java-tutorial.html)","categories":[{"name":"计算机语言","slug":"计算机语言","permalink":"https://rmlin.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"java","slug":"java","permalink":"https://rmlin.cn/tags/java/"}]},{"title":"剧终抑郁症","slug":"剧终抑郁症","date":"2024-09-27T06:45:54.000Z","updated":"2025-02-08T11:05:48.307Z","comments":true,"path":"2024/09/27/剧终抑郁症/","permalink":"https://rmlin.cn/2024/09/27/%E5%89%A7%E7%BB%88%E6%8A%91%E9%83%81%E7%97%87/","excerpt":"你是否有过这种感觉，就是在即将看完一本书，一场电影，一部动漫时会莫名其妙的怅然若失五味杂陈。直到一切结束尘埃落定时，五味杂陈的情绪好像被嚼碎。此时的你肯定意犹未尽，想努力回忆故事的开始，细品结束的感动。但这时你会发现翻遍了一切，留下来的只有茫茫无边的寂寥感。那种感觉会噎的你喘不过气，会让你怀疑故事的真实，但同时会让人欲罢不能。于是我们就会翻找更多更多的故事，再去体验这种感觉……","text":"你是否有过这种感觉，就是在即将看完一本书，一场电影，一部动漫时会莫名其妙的怅然若失五味杂陈。直到一切结束尘埃落定时，五味杂陈的情绪好像被嚼碎。此时的你肯定意犹未尽，想努力回忆故事的开始，细品结束的感动。但这时你会发现翻遍了一切，留下来的只有茫茫无边的寂寥感。那种感觉会噎的你喘不过气，会让你怀疑故事的真实，但同时会让人欲罢不能。于是我们就会翻找更多更多的故事，再去体验这种感觉…… 首先我们从”追剧说起“ 你为什么刷剧停不下来因为在现实生活中，我们想要获得完美爱情和事业有成并不容易纵观周围，你会发现，每个人沉迷的剧类型都是不一样的。 虐恋剧、苦情剧、悬疑剧、职场剧、恐怖剧……每个人潜意识里的需要都不一样。 追剧停不下来，其实也是我们潜意识的一种“替代性满足”。 “替代性满足”就是当你的欲望能量，在最初对象上遇到阻碍时寻找一个替代对象，以消除紧张、满足欲望的心理现象。 比如，一个平时讨好不敢表达攻击性的女孩，却非常喜欢一些个性张扬、飞扬跋扈的角色。 追剧过程中，我们会想象自己是男女主，想要什么就有什么，而且影视创作者深谙观众心理，TA们知道那些情节会让观众获得快感、怎样设计剧情会让人上瘾。 精神分析理论中，弗洛伊德在《作家与白日梦》中提出了文学作品中存在的替代性满足：“每一个幻想都是一个愿望的满足”。 什么是剧终抑郁症？“剧终抑郁症”指的是一部好剧播完后的落寞感。你觉得没有这部剧可看的日子是多么的无聊而空虚。这种空虚和伤感通常在大结局播出时来袭。也许在该剧播完后几周甚至几个月你还郁郁寡欢。唯一的复原方法是找到下一步好看的电视剧或动漫。 影视剧行业总结过一些创作规律：女性观众喜欢看“王子爱上灰姑娘”的故事，男性喜欢看“草根逆袭成英雄”的故事。刷剧的过程虽然很爽，但很多人刷完会有中“虚空”的感觉： 破灭感 感觉生活没有了追求 看不进去一部新的剧 不断回想这剧情和情节 反复重看这部剧 疯狂在网上搜索这部剧的讨论和花絮 不断向身边的人安利这部剧 有人把这种感觉和“失恋”做等同，心理学上称之为“剧终后忧郁”。它不是抑郁症，而是一系列复杂的抑郁感受，与怀旧（nostalgia）和空虚（emptiness）都有共通之处。这种情形不仅仅出现在看剧后，在任何你深陷其中的事件完成后，都会产生这种空虚感。 比如，忙碌的婚礼结束了，期待很久的聚会结束了，准备了几个月的考研结束了……明明当时的自己挺开心，结束后却感觉很难过。 当你深陷情节中时，你的心对它是完全敞开的，你允许你的情绪随之起伏。但当这一切都结束是，你会觉得像是失去了一部分自我。从生理角度来说。导致这种情况的原因，是皮质醇和肾上腺素等激素水平的快速回落，让我们感受到不愉快。 我的理解”我们始终是旁观者，我们进入了别人的世界，看着他们的生活，开始浮想联翩，当回过头来时，发现你的旁观时间已经到了，你不得不走，这时，你会对这些感到留念，觉得要是自己也能这样该多好，你需要说再见，对自己过去的年华说再见“ 观众之所以是观众，因为我们无法去改变故事的走向，无法更改既定的结局。当终点到来时，故事里的他们将停留在那一刻，而我们则要继续向前，离他们而去，这就是为什么我会感到怅然若失的原因。 本人也患有过严重的剧终抑郁症，从一开始不敢看到后面一口气追完全部，看完后意犹未尽，开始在网上看有没有剧场版，有没有番外，有没有小说，有没有漫画；再在各个平台搜作者，搜番剧的讨论，会在这些讨论中一遍遍回味剧情，会扣细节等等以祢补心中那不知为何的空虚。只不过经历了高中三年间断看番，导致“病情”缓解并没有。现在重新看完一部番仍会意犹未尽……. 因为在二次元里面，没有三次元的复杂关系，是最单纯善良的地方，对我来说，二次元并不是逃离现实，而是对现实有新的憧憬。这是父辈们所不能理解的存在，这也很好的解释了 为什么”吃谷人“盛行。有人说二次元的钱好赚，我承认是如此，但二次元们买谷不仅仅是热爱，更多的是情怀，对一个角色性格的喜欢，喜欢ta的方方面面，这是一种精神力量。我想掌握好这种力量可能也不为是一种方式，去激励着人们前行。我可能直到结婚生子还是会去接触番剧，每当接触一部好的番剧时，我都会有新的感悟和理解，我想它为什么不能被称为一种新的”书籍“,纸质书、电子书以外的第三种“书”。它并不“坏”，我们也不应对这种行为感到可耻，大胆去爱！","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://rmlin.cn/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"感情","slug":"感情","permalink":"https://rmlin.cn/tags/%E6%84%9F%E6%83%85/"},{"name":"林","slug":"林","permalink":"https://rmlin.cn/tags/%E6%9E%97/"}]},{"title":"蓝桥杯递归与非递归解题算法的研究","slug":"蓝桥杯递归与非递归解题算法的研究","date":"2024-09-27T01:00:52.000Z","updated":"2025-02-08T10:22:08.725Z","comments":true,"path":"2024/09/27/蓝桥杯递归与非递归解题算法的研究/","permalink":"https://rmlin.cn/2024/09/27/%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%80%92%E5%BD%92%E4%B8%8E%E9%9D%9E%E9%80%92%E5%BD%92%E8%A7%A3%E9%A2%98%E7%AE%97%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6/","excerpt":"蓝桥杯大赛由工业和信息化部人才交流中心主办，国信蓝桥教育科技（北京）股份有限公司承办，是高校教育教学改革和创新人才培养的重要竞赛项目。经过多年的发展，蓝桥杯大赛吸引了包括北京大学、清华大学、上海交通大学、复旦大学、南京大学、哈尔滨工业大学、北京航空航天大学、北京理工大学、四川大学、华中科技大学、华东师范大学、华南理工大学等知名院校在内的1400多所高校参与，参赛选手总数已经超过30万人，成为国内首屈一指的IT类专业赛事。研究了一道填空题的两种解法，以供同行参考","text":"蓝桥杯大赛由工业和信息化部人才交流中心主办，国信蓝桥教育科技（北京）股份有限公司承办，是高校教育教学改革和创新人才培养的重要竞赛项目。经过多年的发展，蓝桥杯大赛吸引了包括北京大学、清华大学、上海交通大学、复旦大学、南京大学、哈尔滨工业大学、北京航空航天大学、北京理工大学、四川大学、华中科技大学、华东师范大学、华南理工大学等知名院校在内的1400多所高校参与，参赛选手总数已经超过30万人，成为国内首屈一指的IT类专业赛事。研究了一道填空题的两种解法，以供同行参考 赛题内容题目名称，奇怪的比赛。题目大意如下：某电视台答题类比赛。计分规则如下：参赛选手每人需要回答10个问题（其编号为1到10），题号越往后，难度越大。答对的，当前分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。每位选手都有一个起步的分数为10分。某获胜选手最终得分刚好是100分，如果不让你看比赛过程，你能推断出他（她）哪个题目答对了，哪个题目答错了吗？如果把答对的记为1，答错的记为0，则10个题目的回答情况可以用仅含有1和0的串来表示。例如：0010110011 就是可能的情况。 你的任务是算出所有可能情况。每个答案占一行。多个答案顺序不重要。 审题审题很关键，总共就10题，每道题必须解答，如果答对分数乘以2，答错扣掉当前题号对应的分值。首先得研究答题情况0010110011时，为什么得分是100分。答题前的初始分数是10分，根据题目中的测试用例，用例的得分过程如表1所示。 从上表可以清晰地看到答题得分的具体情况，为后面写程序奠定基础。 递归思路解题递归总共调用10层，到第十一层就停止。设计递归的出口和形式。递归函数名取作competition，参数设两个，一个是待打题号step，一个是分数sum递归函数声明为void competition (int sum,int step)。递归的答题调用情况如图1所示。 递归解法的完整代码如下： 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;int ans[12];void competition(int sum,int step)&#123;if(step==11)&#123; if(sum==100)&#123; for(int i=1 ;i&lt;11 ;i++)&#123; printf(&quot;%d&quot;,ans[i]); &#125; puts(&quot;&quot;); &#125; &#125;else&#123;ans[step]=0;competition (sum-step,step+1); //错ans[step]=1;competition (sum*2,step+1); //对 &#125;&#125;int main()&#123;competition (10,1);return 0;&#125; 非递归暴力穷举法解题 用整形数组表示答题情况，在 main 函数中声明数组 chardati[12]，其中dati[0]不使用，dati[11]也不使用，用dati[1]~dati[10]依次存储答题标记，’0’表示答错，’1’表示答对。有学生用十层循环的嵌套来穷举所有的答题情况，而本论文的思路是先研究十位无符号二进制的表述范围0~1023，将访问到的十进制值转化为二进制，十进制转二进制（10位）的流程图如图2所示，数组的使用是关键。然后是根据答题得分规则写得分判断函数。参考表1，设计计算得分函数如下所示。 1234567891011121314151617181920212223242526272829int getResult(char *bn)&#123; int score=10; int i; for(i=1;i&lt;=10;i++) &#123; if(bn[i]==&#x27;0&#x27;)score=score-i; else if(bn[i]==&#x27;1&#x27;)score=score*2; &#125; return score;&#125;最后设计主函数main，代码如下：int main()&#123; char dati[12]; int score; int num; score=10; for(num=0;num&lt;=1023;num++) &#123; change(dati,num); score=getResult(dati); if(score==100) &#123; print(dati); printf(&quot;\\n&quot;); &#125; &#125;&#125; 最后，运行程序，结果如图3所示 如此，题目已经解答正确。 结束语蓝桥杯程序竞赛近年来得到越来越多的关注，每年有接近上万的选手参赛，如何辅导选手更好地发挥所长取得成绩，需要不断地研究赛题，本文只是针对一道填空题的递归和非递归解法做示范，希望能给同行参考。未来将更多地关注难度更高的赛题议。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://rmlin.cn/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"c++","slug":"c","permalink":"https://rmlin.cn/tags/c/"}]},{"title":"A 的日常","slug":"A 的日常","date":"2024-09-25T06:48:25.000Z","updated":"2025-03-12T13:54:56.778Z","comments":true,"path":"2024/09/25/A 的日常/","permalink":"https://rmlin.cn/2024/09/25/A%20%E7%9A%84%E6%97%A5%E5%B8%B8/","excerpt":"前言A 躺在床上睡不着，突然想明白了一件事，我是会死的。也许是10年后，也许是30年后，也许是50年后，谁知道呢？反正是有这么一天的，然后这个世界上会没有我任何存在过的痕迹。这一刻ta突然顿悟了，什么面子，什么压力，全都不重要了，好轻松，无比的通透。此刻看着天上的星星，突然觉得好感动，”以后的每一天我都要过的很开心，因为，除了活着，其他的什么都不重要了”。说罢便安心睡下了:sleeping:","text":"前言A 躺在床上睡不着，突然想明白了一件事，我是会死的。也许是10年后，也许是30年后，也许是50年后，谁知道呢？反正是有这么一天的，然后这个世界上会没有我任何存在过的痕迹。这一刻ta突然顿悟了，什么面子，什么压力，全都不重要了，好轻松，无比的通透。此刻看着天上的星星，突然觉得好感动，”以后的每一天我都要过的很开心，因为，除了活着，其他的什么都不重要了”。说罢便安心睡下了:sleeping: 前传A 是一个普普通通的高中生，或许那晚对人生的思考就是他出生以来做过的最伟大的事件了。他每天上学期待的莫过于午餐和晚餐的定夺啦！虽然学习成绩不行却对学校食材有着顶级理解，他喜欢在最后一节课后疯跑去食堂，那是他最快乐的时光。或许是坐在第一排的原因，A总是能在抢饭者中位列前茅。他是那么自豪比别人多出这么多时间，可以最快的吃饭然后回到宿舍开始学习。可A并不开心，因为回到教室后看到有人不吃饭在学习，他很害怕，害怕被超越、害怕被拉下……于是他也开始不吃饭学习，但新的麻烦却出现了。“拉呱姐”在经历一天繁重的课程后唯一有时间聊八卦也只有现在了，A开始烦周围的环境，怪别人聊天会影响他的学习，A自顾自的跑出教室其寻找“一方净土”。（可为什么其他学习的人不受影响呢？）寻求自我安慰？也许吧，具体的情况可能只有A自己知道。 A总是找着各种理由，他不愿意承认自己的不足，把所有问题归咎与环境与他人，所以最后的最后他也没有考上心仪的大学，回想高一的信誓旦旦再看看自己的处境，他的朋友曾开玩笑的对他说：“不会三年后，让我知道你在一个三本吧” 是的，这句话灵验了又好像没有，因为他的朋友始终不知道A去了哪里。“不告诉别人他就不知道了吧！”A自以为是的说道“ 这句话不算灵验“。 那时候的他就已经学会了自我欺骗的啊Q精神胜利法了。 最可悲的是A直到现在还在用着精神胜利法并自我欺骗着…… 中传2023-2024上半年A看似很忙也拿到了很多荣誉和奖项，但你如果去问A学会了什么？ta会告诉你-——nothing。这些奖项在升学上没有帮助，在求职上也毫无建树，只是为了少许学分绩点拼命着打比赛（到最后因为成绩不突出也没拿到奖学金&#x2F;(ㄒoㄒ)&#x2F;~~） 在情感方面，A追过两个女孩都失败了，于是乎A去算了一卦。直到有一天神婆说在大学期间学业和爱情只能择其一，A眉头一皱心一狠”果然只能抛弃爱情了呢”。但A在爱情方面并不是一无所获，或许是巧合ta前后看了一本书和一部电影，《月亮与六便士》和《花束般的恋爱》，对爱情有了新的理解和定义。”月亮很美好，但地上的便士更加重要”，随着A学历和阅历的提升他的眼界会变高，会遇到更优秀的女孩子，稳定的工作收入才是爱情有力的保障，或许A错过了一段轰轰烈烈的大学爱情，但ta不后悔并为此努力着。 2024 下半年今年是A上大学的第二年，勉强成为了一个“合格”的大人，学会了自我反省和尝试中试错。Scanning past life to see future，A发现了自己的定位并为此奔波努力ing ，而他最近的一个目标就是十二月份的四级考试。Fighting！！！ 经过了几个月的焦急等待四级考试也落下帷幕，A凭借微弱优势通过了四级考试同时期末考试也顺利通过似乎一切都进入正轨。熟悉的同学、水课，同样的课堂上消磨时光 但A同学已经焕然一新，因为他知道留给自己的时间不多了，六级考试悄然来临。你会发现总有一群在你看不见的地方忙些什么，兴趣爱好也好，考学考公也罢，他们都在向着自己期盼的那个人一点点靠近。A当然也不甘示弱拿起一本红宝书就是埋头苦背，一天、两天、三天……..十天。A有点厌倦了，不如说被其他新事物吸引——一点点新鲜事物、新的人。那么他会怎么抉择呢？ 他又会怎么渡过他的大二生活呢？ 或许只有时间能给出答案吧。","categories":[{"name":"路人A","slug":"路人A","permalink":"https://rmlin.cn/categories/%E8%B7%AF%E4%BA%BAA/"}],"tags":[{"name":"路人A","slug":"路人A","permalink":"https://rmlin.cn/tags/%E8%B7%AF%E4%BA%BAA/"}]},{"title":"情感的本质","slug":"情感的本质","date":"2024-09-24T05:37:48.000Z","updated":"2024-09-25T07:37:30.733Z","comments":true,"path":"2024/09/24/情感的本质/","permalink":"https://rmlin.cn/2024/09/24/%E6%83%85%E6%84%9F%E7%9A%84%E6%9C%AC%E8%B4%A8/","excerpt":"情感是人们对客观事物是否符合自身需要而产生的内心体验，它是一种心理现象，包括喜怒哀乐、爱恨惊惧等。情感心理学主要研究情感发生、发展、变化的心理规律。根据情感发生的强烈程度、持续时间的长短、情感的稳定性和方向性，情感可以分为心境、激情和应激 情感的发生伴随着多种生理变化，如心率加快、呼吸急促、血压升高、面部表情肌肉运动等。这些生理变化是由大脑边缘系统、下丘脑、脑干网状结构等部位的中枢活动所引起的。这些生理机制对于情感的表达和调节具有重要的作用。 情感与认知是相互关联的，情感是基于认知的，同时又对认知产生影响。情感体验会影响人的认知判断和决策，同时认知过程也会影响情感的表达和调节。例如，积极的情绪可以提高人的注意力和记忆力，而消极的情绪则可能导致认知功能下降。 一条河流曲曲弯弯，前进、后退、迂回，却总是到达要去的地方。 —奥克塔维奥·帕斯-","text":"情感是人们对客观事物是否符合自身需要而产生的内心体验，它是一种心理现象，包括喜怒哀乐、爱恨惊惧等。情感心理学主要研究情感发生、发展、变化的心理规律。根据情感发生的强烈程度、持续时间的长短、情感的稳定性和方向性，情感可以分为心境、激情和应激 情感的发生伴随着多种生理变化，如心率加快、呼吸急促、血压升高、面部表情肌肉运动等。这些生理变化是由大脑边缘系统、下丘脑、脑干网状结构等部位的中枢活动所引起的。这些生理机制对于情感的表达和调节具有重要的作用。 情感与认知是相互关联的，情感是基于认知的，同时又对认知产生影响。情感体验会影响人的认知判断和决策，同时认知过程也会影响情感的表达和调节。例如，积极的情绪可以提高人的注意力和记忆力，而消极的情绪则可能导致认知功能下降。 一条河流曲曲弯弯，前进、后退、迂回，却总是到达要去的地方。 —奥克塔维奥·帕斯- 情感的定义心理学把情感定义为：“人对客观现实的一种特殊反映形式，是人对于客观事物是否符合人的需要而产生的态度的体验”。从这个定义可以了解到：情感是一种主观体验、主观态度或主观反映，属于主观意识范畴，而不属于客观存在范畴。 “人对于客观事物是否符合人的需要”实际上是一个典型的价值判断问题，“符合人的需要”就是事物的价值特性，是一种客观存在，“态度”和“体验”均是人对事物的价值特性的认识方式或反映方式，这样，心理学的情感定义又可表述为：“情感是人对事物的价值特性所产生的主观反映”。情感所对应的客观存在应该是事物的价值特性。 情感是人脑对于价值关系的主观反映，那么情感的大小也必然取决于主体、客体和介体三者的品质特性，这就是“情感的三要素”。 根据情感主导变量的不同，人的情感可分为欲望、情绪与感情三种类型。 欲望 ​ 当主导变量是人的品质特性时，人对事物所产生的情感就是欲望。当机体缺乏食物时，人就会产生饥饿的心理体验，并形成对于食物的欲望。是人的本质，因为他的本质被认为是由任何给定的自身情动所决定的任何行动 情绪 ​ 当主导变量是环境的品质特性时，人对事物所产生的情感就是情绪。例如，脏、乱、差的工作环境使人产生不愉快的情绪。 感情 ​ 人的生存与发展要核心内容上就是对于价值的生产与消费，那么，情感对于人类的意义就是：人类依靠情感来识别价值、表达价值、区分价值、计算价值、选择价值和创造价值。 情感的脆弱与坚韧情感，这个看似无形却强大无比的力量，既能让两个陌生人迅速靠近，也能在瞬间将最亲密的关系推向深渊。它的脆弱，在于一旦受到伤害，即便是最细微的裂痕，也可能成为无法愈合的伤口；而它的坚韧，则在于那些历经风雨依然坚守的情感，如同磐石般坚定不移。然而，当人心寒了，这份坚韧似乎也变得脆弱不堪，因为寒心，往往源于信任的崩塌和期望的落空。 什么是脆弱？（自我逃避） ​ 在Anna Bruk等人（2018）看来，脆弱（vulnerability）是指：尽管有恐惧，但仍然愿意对不确定性和风险持开放态度，愿意暴露自己的情感。它意味着我们不害怕被拒绝，愿意放弃对自身全然的控制，把自己放在一个被动的、充满风险的位置。我们谈论脆弱的时候，谈论的是一种没有防御或者防御程度低的生活。 脆弱的人是敞开的，不以“活得安全”作为人生的信条，ta们愿意进行尝试，迎接来自外界的所有回应，即便得到的是拒绝；脆弱的人不害怕伤害，愿意面对自己的所有面向，容忍自己的挫败和丧失，而不是把令人痛苦的感觉隔离开来。在ta们看来，感知伤害是人生的一部分，在被伤害后能够涵容痛苦，继续拥抱生活，同样是人生的一部分。**脆弱是朝向适应现实的，对个人的发展有极重要的意义。 但是，我们常常回避脆弱（放弃） ​ 尽管我们需要脆弱，但常见的情况是，我们将脆弱与恐惧、羞耻、悲伤和失望等黑暗情绪（dark emotions）联系在一起，即使它们深刻地影响了生活、爱和工作方式，这些情绪我们也不想讨论。 ​ 比如，不敢率先承认自己对他人的爱，因为这看起来像是放弃了自己对这段关系的控制权，有着被拒绝的可能；不敢在工作中说出自己面临的困难，因为这意味着无能；不敢表露自己对某件事情的恐惧和悲伤，因为这代表着软弱和矫情。 ​ 在现代社会中，脆弱依然被看作需要隐藏和规避的情感，需要将其从我们的经验世界中清除掉。尤其对男性来说，在男子气概中，脆弱往往被认为是缺点，而不是美德。 ​ 情况在今天变得更加复杂，不论男女，更被社会认可的气质是坚强、果敢，流露脆弱不仅可能会被看作“软弱”，还有“装可怜”之嫌。 ​ 这也与我们的防御有关。我们生活在一个随时都可能被伤害的世界，为了避免某些伤害，发育出了许多自我防御机制。脆弱带来的痛苦，常以这种方式被我们隔离掉。 ​ 因此，脆弱是珍贵的。 ​ 在回避脆弱的过程中，我们变得自我封闭。当我们把痛苦隔绝在心门外的时候，我们也把一切新鲜事物发生的可能性、把所有可能改变我们当下状态的美好事物的发生，一起阻挡在了自身以外。 如何做到保持脆弱？ ​ 当一个人是脆弱的，ta对他人就可以有更好的共情——因为ta们不害怕体会到情感，也更能理解他人深深埋藏起来的脆弱和痛苦。因此ta们对待他人更为仁慈。 ​ ta们欢迎未知的可能性，准备好了承受生活中的各种遭遇，是因为ta们更有勇气、更相信自己，也是因为一种“无论欢喜悲伤，都是生而为人的珍贵体验”的人生价值观。 ​ 这种脆弱的本质，是对待自我、他人和世界的深深的敞开——一种允许新事物发生发展的人格开放性，最终因为开放，你迎接了变化的发生，从而走向了自我的康复。 关于如何做到保持脆弱，把“向着万事万物深深敞开自己”作为一种生活态度，你可以尝试以下几点： ​ 自爱。如果不能够爱自己，不愿意看一看自己真实的需求、不愿意承认自己的痛苦、不相信自己的欲望和感受是重要的，你的敞开就无从说起。你对生活的感受，就会很容易被社会的评价影响。 ​ 接纳。接纳自己不可能控制一切、接纳他人有着和自己一样的人性的复杂性。这种接纳会让你放下高的预期，从而更平和地看待生活。 ​ 有意识地放弃一部分生活中的防御。不畏惧痛苦，认识到它是生而为人的一部分、甚至是一种特权。认识到自己随时可能受到伤害的现实，同样，也认识到自己有能力处理痛苦。只有放下防御，我们才是敞开的，新的事物才能刚好地走进我们。 掌控意味着已知，允许意味着未知。要想生活发生改变，获得新的可能，必须承受风险、放弃掌控、让自己意外——我们无法预知是好的可能还是坏的可能，我们只能向万事万物深深地敞开自己。 以开放的态度对待生活并不容易，但也正因其艰难而显得更有价值。有些人想躲避艰难，封闭内心来阻隔焦虑和压力，但这是对真实情绪和感受的压抑，长此以往会损害身心健康。我们必须敞开身心，与自己对话、与真实的世界互动，才能成为心理灵活性更强的人。 不过，走向开放、接纳脆弱是一个过程。也就是说，这不意味着完全否定当下的防御机制，也不意味我们要立刻“开放”，当我们意识到自己难以承受的时候，依然可以有选择地退回到安全领域，逐渐消解自身的痛苦。 但最终，如果想过更有可能性的生活，让更新和更好的事物在我们体内发生，就要求我们必须看到脆弱的珍贵与美好，望向面前的另一条路径：从安全领域走出，以开放而脆弱的状态迈向这个世界，从而过上更为丰盈的人生。 情感的博弈与均衡背叛与忠诚和信任是相对应的，而理解和信任才是情感和家庭关系的根基。前文所述只不过是在简单地假设条件下，将经济学原理运用于背叛预期的分析，基本上只是揭示了问题。考虑到夫妻或者伴侣双方的直接互动，接下来我们可以通过引入博弈分析来部分地解决问题。之所以说是部分地解决，是因为现代经济学中的效用分析和效率观点是不完善的，它缺乏或者说丧失了心理学的根基。例如Sen批评“理性人假设”将人看成了“理性的傻瓜”；Kahneman在谈到理性假设时说“除理性之外，人类的行为都是有目的的”。另外，自边际效用学说之后，序数效用表达偏好排序回避了效用的人际比较问题，而在考虑福利影响时这一问题又是无法回避的。 设想一种情境，其中双方都面临“忠诚”和“背叛”两种选择。如果双方都忠诚并情愿付出则情感和谐（尽管其直接表现为负所得），仅一方付出则另一方属于“搭便车”者（free-rider），双方都不付出则婚姻是失败的，所得皆为0。下图是为支付矩阵，其中数字可理解为投入时间价值：0 可以看出，双方的占优策略都是“背叛”，它与“囚徒困境”相似，但不同的是使双方收益（并非最终效用）最大化的策略并非是双方做出一致选择，而是只要有一方“忠诚”。这里需要先说明两点：一是此处的收益应是直接收益，将时间投入到家庭中属于对家庭的“奉献”，尽管最终会带来自身的收益，但仍先是直接体现为自身的付出；二是双方都选择“忠诚”仍是最值得追求的，因为家庭关系的和谐需要双方进行“合作”，才能取得互补收益并实现家庭效用的最大化。接受这两点，我们再考虑一方“忠诚”而另一方“背叛”的问题，它实际上表达了一种“调适”的理念。我们不主张丈夫或妻子持有传统的“三从四德”观念，即使对方不忠也甘愿奉献和牺牲自我。然而，家庭的组建和解散都是需要成本的，同时家庭幸福是需要不懈努力来追求的，如果一味坚持自身利益优于家庭利益和所谓的“平等”观念，最终可能不会得到家庭幸福。 与此类似，“性别战”是个博弈论中众所周知的例子。如果按照经济学的效率和最优化观点，双方都做自己最喜欢的事可以各得其所。然而，这里忽略了从对共同刺激有共同的反应中所获得的乐趣。所以，可能最好的办法是双方共同去做同一件事，然后得到真正最好的结果。另外，如果将家庭在个人的生命周期中视为是永续存在的，那么从双方博弈的角度来说，它应当是无限次重复博弈。由于无限次重复博弈中的最优策略永远都是“针锋相对”，这也给“合则两利”提供了充分的理由。 世界上有任何人都没有见过的东西， 它很温柔， 非常甜美 。大概如果可以看见的话 ，谁都会想要的吧。 正因为如此 ，才会谁也没有见过它， 为了让人无法那么轻易地得到， 世界才把它藏了起来 。但是总有一天会有人找到 ，应该得到的那个唯一的人 ，一定能把它找出来。 ——《龙与虎》 爱情动漫诗词摘录——致年少的青春 山内有樱名为良， 树本无名只待春； 樱花生在深山内， 春树志向贺新春； 樱花易逝，春树常青。 ———《我想吃掉你的胰脏》 音无结弦之时， 跃动天使之心； 立于浮华之世， 奏响天籁之音； 升起立华乐独奏， 曲终音无心结弦。 ” ———《天使的心跳》 “未闻花名，但识花香； 已知花名，花已不在； 再识花时，泪已千行。 ” ———《未闻花名》 引用： 情感的本质|Chen (reschen.cn) 背叛预期与感情危机——基于心理经济学分析 (cnki.net) 情感的哲学本质_百度百科 (baidu.com) 如何理解「脆弱是非常珍贵的一面，甚至是最美好的部分」？ - 知乎 (zhihu.com)","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://rmlin.cn/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"感情","slug":"感情","permalink":"https://rmlin.cn/tags/%E6%84%9F%E6%83%85/"},{"name":"林","slug":"林","permalink":"https://rmlin.cn/tags/%E6%9E%97/"}]},{"title":"我的第一篇blog","slug":"我的第一篇blog","date":"2024-09-12T16:00:55.000Z","updated":"2024-10-06T13:15:36.800Z","comments":true,"path":"2024/09/13/我的第一篇blog/","permalink":"https://rmlin.cn/2024/09/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/","excerpt":"Hello World!","text":"Hello World! 1.生日记录篇 收到了很多很多人的祝福，好开心！ 遇到了有趣的人！ 我们真的需要一些勇气，一些爱的勇气，一些不爱的勇气。 keep loving 张三的画好看的嘞，要是我也能画出这种的就好了 ​ 初中倒是画了些，也买了马克杯，勾线笔…… 但总的来说，被中式教育遏制住，兴趣被扼杀。仔细想想学生时代除了打游戏就没啥爱好，得亏钢琴吉他学的早，不然真泯然众人已。不过现在到也是一个什么也不行的半吊子吧，习没学好，游戏没打爽，女朋友没谈上，钱包还空空！😐 2.去年的随笔 《云端向往的两人》 ​ 当我们抬头仰望天空，目光常常被那些洁白无瑕、悠然自得的云朵所吸引。它们犹如天空的精灵，变幻着形状，漫舞在蔚蓝的天幕上。它们是自然界的魔法师，用它们千变万化的姿态，向我们展示了大自然的神秘与魅力。 ​ 与他邂逅是在一个明媚的下午，长久低头让我不免疲倦，抬头望向远方，一个男生出现在我视线中，操场上只有他一个人躺着，与周围玩耍的人群格格不入，顺着他的目光看去，天空中有一朵盛开的花，边缘稀薄的云层在太阳的透视下呈现出橙黄色，碎云点缀在花的四周宛如烟花盛开，我深深被这副景象吸引……这是我从未见过的景色。 ​ 第一次见到她是在一个晴朗的下午，我躺在操场上看云，远处有一只火烈鸟形状的云,我盯着感受它的移动一点一点的移动，不经意间一瞥，有一个女生坐在看台上，手中不时写着什么，我看着她认真的样子，我的心里仿佛长满了玫瑰，有岩石、篝火，还有爱人日落与晚霞，从见到她的时候更加生生不息。回过神时火烈鸟已经消失在天际，却留下一朵盛开的花。 ​ 云朵轻轻飘过，两颗心在这虚幻的境地相对而望。他们是命运的牵引，是爱情的缠绕。 ​ 我慢慢开始对这个女生产生好奇，我可能得了什么怪病，在望向天空时，每一朵云好像都是她的身影。感觉很熟悉却又想不起来，是我曾失去了的很重要的东西。 ​ 我慢慢开始对这个男生产生好奇，在读书写字时，那朵盛开的花和他的身影时不时出现在我脑海里，我想我大抵是病了，得了一种很奇怪的病。它如同一杯苦咖啡，那种苦涩而浓烈的滋味让人无法忘怀，而且会随着时间的推移而变得更加深刻。 ​ 我想——再见他（她）一次！只有她（他）才能治好我。 ​ 那是在霞光眩目的傍晚，云很多，我感觉他一定会来。对着镜子用饼粉打底、眉笔勾勒出卧蚕的形状、遮瑕轻轻涂抹在鼻翼两侧、腮红顺着脸颊慢捻……我以自己最满意的妆容和装扮去见他。操场上的人不多，但即使我站在看台上使劲张望却也看不到他的身影……一道道霞光像条条河流汇聚在天际，走下看台，心中卷起层层涟漪。 ​ 在晚霞的余晖下，一位少年穿过拥挤的人群奔跑。他的黑色发在微风中飞舞，身上白色的运动衫也被晚霞染成了橙黄。那片渐渐消退的晚霞如同一幅色彩斑斓的油画，将整个天空点缀得美轮美奂。从西方柔和的粉红色渐变为橙黄色，像是宇宙的云彩在不断变幻。悠扬的鸟鸣声回荡在空中，像是在鼓励少年勇往直前。在少年急促的呼吸声中，他回想起来了那个女孩，那个心中的白月光。 拥挤的人群中，两人四目相对，他们相遇了。 ​ “我……” ​ “我喜欢你！”男孩喘着说到“图书馆你认真的样子让我浪荡的生涯变轨，我立下誓言跟随你的脚步去追求属于我的天空，而你就是我的云”。 ​ ps: 去年看了芥川龙之介的《竹林中》，特别喜欢他的多视角描写。关于女子妆容描写有待争议，不太懂。。。 高中倒是有女生教我认口红色号，什么牛血、砖红、水蜜桃、葡萄红,叠涂什么的好难！😐","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://rmlin.cn/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"林","slug":"林","permalink":"https://rmlin.cn/tags/%E6%9E%97/"}]}],"categories":[{"name":"计算机语言","slug":"计算机语言","permalink":"https://rmlin.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"},{"name":"杂谈","slug":"杂谈","permalink":"https://rmlin.cn/categories/%E6%9D%82%E8%B0%88/"},{"name":"路人A","slug":"路人A","permalink":"https://rmlin.cn/categories/%E8%B7%AF%E4%BA%BAA/"}],"tags":[{"name":"python爬虫","slug":"python爬虫","permalink":"https://rmlin.cn/tags/python%E7%88%AC%E8%99%AB/"},{"name":"java","slug":"java","permalink":"https://rmlin.cn/tags/java/"},{"name":"感情","slug":"感情","permalink":"https://rmlin.cn/tags/%E6%84%9F%E6%83%85/"},{"name":"林","slug":"林","permalink":"https://rmlin.cn/tags/%E6%9E%97/"},{"name":"c++","slug":"c","permalink":"https://rmlin.cn/tags/c/"},{"name":"路人A","slug":"路人A","permalink":"https://rmlin.cn/tags/%E8%B7%AF%E4%BA%BAA/"}]}